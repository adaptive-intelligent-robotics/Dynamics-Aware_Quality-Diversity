Bootstrap: library
From: airl_lab/default/airl_env:base_2.0

# base image has sferes, robot_dart on Ubuntu20.04

%labels
    Author bryan.lim16@imperial.ac.uk
    Version v0.0.1

%files


%environment
   export PYTHONPATH=$PYTHONPATH:/workspace/lib/python3.8/site-packages/
   #export PYTHONPATH=$PYTHONPATH:/git/model_based_qd/
   export LD_LIBRARY_PATH="/workspace/lib:$LD_LIBRARY_PATH"
   
%post
   export LD_LIBRARY_PATH="/workspace/lib:$LD_LIBRARY_PATH"

   apt-get update -y
   apt-get install -y cmake xvfb python3-tk ffmpeg
   pip3 install numpy matplotlib seaborn pandas imageio sklearn scipy graphviz
   pip3 install pybullet gym 
   pip3 install torch torchvision

   # for world models replication
   pip3 install cma argparse box2d tqdm

   cd /git/sferes2/exp/
   mkdir model_based_qd

   #==================================================================================
   exit 0 #NOTFORFINAL - the lines below this "exit" will be executed only when building the final image
   #==================================================================================

   #CLONEHERE
   echo "cloning model_based_qd repository"
   cd /git
   git clone --recurse-submodules https://oauth:vB8mcibZBSdtQEW4EsCN@gitlab.doc.ic.ac.uk/AIRL/research_projects/bryan_lim/model_based_qd.git
   


%runscript

    ############# Starting a VNC server ##################
    # Sleep random duration between 0 and 90 seconds, to prevent 2 vnc-servers from starting at the same time on the same host.
    bash -c 'sleep $[ ( $RANDOM % 90 ) + 1 ]s'\

    # Updating the HOME folder for the container, where the .Xauthority file will be created.
    # That solution works iff the appropriate binding is performed (this is done automatically in gitlab-notebook jobs)
    export HOME=/tmp/home
    mkdir $HOME
    D=$(/opt/TurboVNC/bin/vncserver 2>&1 | grep "Desktop" | awk '{print $3}' | sed 's/.*://g')
    export DISPLAY=':'$D

    ################# Creating results folder ########################
    CURPATH=$(pwd)
    cd /git/model_based_qd/
    DIRNAME=results
    PATHNAME=$(date +%Y-%m-%d_%H_%M_%S)_$$

    # Create a random direcotry name where XXX will be replaced with random characters
    mkdir -p $CURPATH/$DIRNAME/
    tmp_dir=$(mktemp -d -p $CURPATH/$DIRNAME/ ${PATHNAME}_XXX)
    mkdir -p $tmp_dir
    echo tmp_dir is $tmp_dir

    ####################### Run program ####################
    cd /git/model_based_qd/
    python -u pushing_main.py --num_cores 30 --log_dir $tmp_dir --dump_period 10000
    #python -u hexapod_omni_online_main.py --num_cores 30 --log_dir $tmp_dir --dump_period 5000
    #python -u hexapod_omni_baseline_main.py --num_cores 30 --log_dir $tmp_dir --dump_period 10000
    #python -u hexapod_uni_baseline_main.py --num_cores 30 --log_dir $tmp_dir --dump_period 500 --max_evals 50000
    #python -u pushing_baseline_main.py --num_cores 30 --log_dir $tmp_dir --dump_period 10000



# CREATE AND DEFINE DIFFERENT APPS TO RUN AS JOBS - called from the json file
# Example: Can run using singularity run --app gen_job_scripts image_name
%apprun gen_job_scripts
    echo "Generating job scripts"
    python3 /git/model_based_qd/submodules/gitlab_notebook/gen_job_script.py "$@"


%apprun Analysis
    cd /git/sferes2/
    PATH_ANALYSIS=$1
    shift
    python3 /git/sferes2/exp/rastrigin_stochastic/analyse/main_analysis.py -d $PATH_ANALYSIS "$@" --sample
    cd /git/sferes2/exp/rastrigin_stochastic/
    python3 ./submodules/gitlab_notebook/gen_report.py $PATH_ANALYSIS $PATH_ANALYSIS



%help
    This is the development and running environment of the model based qd 
